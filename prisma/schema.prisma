generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String @id @default(uuid())
  name     String @db.VarChar(180)
  email    String @unique @db.VarChar(180)
  password String

  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @default(now()) @updatedAt @db.Timestamp

  @@map("users")
}

model Contact {
  id              String  @id
  name            String?
  email           String  @unique
  is_unsubscribed Boolean @default(false)
  is_blocked      Boolean @default(false)
  is_bounced      Boolean @default(false)
  integration_id  String? @unique

  group_tab GroupTag

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("contacts")
}

model Tags {
  id             String  @id
  title          String  @unique
  integration_id String? @unique

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Templates Templates[]

  @@map("tags")
}

model Templates {
  id          String  @id
  title       String  @unique
  content     String
  is_default  Boolean @default(false)
  is_document Boolean @default(false)
  tag_id      String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Messages Messages[]
  tags     Tags       @relation(fields: [tag_id], references: [id])

  @@map("templates")
}

enum EventType {
  DELIVERY
  OPEN
  CLICK
  BOUNCE
  COMPLAINT
  REJECTED
  SENDED
}

enum GroupTag {
  ROCKETZAPI_CLIENTS
  SONIK_API_ERROS
  RCOKETZAPI_MARKETING
}

model Messages {
  id               String  @id
  subject          String
  body             String
  template_id      String?
  sender_id        String
  recipients_count Int     @default(0)

  sent_at    DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt

  template Templates? @relation(fields: [template_id], references: [id])

  @@map("messages")
}

model Sender {
  id           String  @id
  name         String
  email        String  @unique
  is_validated Boolean @default(false)
  is_default   Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("senders")
}
